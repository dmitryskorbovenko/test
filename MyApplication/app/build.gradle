apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.example.dmitryskorbovenko.myapplication"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName inferVersion()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}

task printVersion {
    println inferVersion()
}

static String inferVersion() {

    def latestReleaseTag = "git describe --abbrev=0 --tags --match v* --first-parent".execute().text.trim()
    def latestReleaseTagHash = "git rev-list -n 1 $latestReleaseTag".execute().text.trim()
    def currentHash = "git rev-parse HEAD".execute().text.trim()
    def currentBranch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()

    def isReleaseCommit = latestReleaseTagHash == currentHash
    def isRcBranch = currentBranch.contains("RC")

    def shouldIncrementMinor = !isReleaseCommit && !isRcBranch
    def shouldAddSnapshot = !isReleaseCommit || isRcBranch

    def version = latestReleaseTag.substring(1)
    if (shouldIncrementMinor) {
        version = version.replaceAll(/(\d+).(\d+).(\d+)/, { all, major, minor, patch ->
            "$major.${Integer.parseInt(minor) + 1}.$patch" })
    }

    if (shouldAddSnapshot) {
        version += "-SNAPSHOT"
    }

    return version
}